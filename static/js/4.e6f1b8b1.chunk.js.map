{"version":3,"sources":["models/profile.model.js","services/firebase.tsx","pages/signup.page.js"],"names":["Profile","userId","fullname","username","email","following","followers","dateCreated","this","ProfileConverter","toFirestore","user","fromFirestore","snapshot","options","data","doesUsernameExist","a","querySnapshot","query","collection","db","where","getDocs","docs","length","console","log","updateUser","profile","ref","doc","withConverter","setDoc","createUser","auth","password","createUserWithEmailAndPassword","catch","error","code","message","userCredential","uid","toLowerCase","Date","now","Signup","history","useNavigate","useContext","FirebaseContext","useState","setEmail","setUserName","setFullName","setPassword","setError","isValid","handleSignup","e","preventDefault","getAuth","Route","useEffect","document","title","className","src","alt","onSubmit","method","type","placeholder","onChange","target","value","disabled","cx","to"],"mappings":"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","file":"static/js/4.e6f1b8b1.chunk.js","sourcesContent":["class Profile {\n  constructor(userId, fullname, username, email, following, followers,dateCreated) {\n    this.userId = userId;\n    this.fullname = fullname;\n    this.username = username;\n    this.email = email;\n    this.following = following;\n    this.followers = followers;\n    this.dateCreated = dateCreated;\n  }\n  toString() {\n    return this.fullname + \", \" + this.username + \", \" + this.email;\n  }\n}\n\n// Firestore data converter\nconst ProfileConverter = {\n  toFirestore: (user) => {\n    return {\n      userId: user.userId,\n      fullname: user.fullname,\n      username: user.username,\n      email: user.email,\n      following: user.following,\n      followers: user.followers,\n      dateCreated: user.dateCreated,\n    };\n  },\n  fromFirestore: (snapshot, options) => {\n    const data = snapshot.data(options);\n    return new Profile(\n      data.userId,\n      data.fullname,\n      data.username,\n      data.email,\n      data.following,\n      data.followers,\n      data.dateCreated,\n    );\n  },\n};\n\nexport {Profile,ProfileConverter}","import {\n  db,\n  where,\n  query,\n  collection,\n  getDocs,\n  createUserWithEmailAndPassword,\n  getAuth,\n  doc,\n  setDoc,\n  updateProfile,\n} from \"../lib/firebase\";\n\nimport { Profile, ProfileConverter } from \"../models/profile.model\";\n\nasync function doesUsernameExist(username:string) {\n  try {\n    const querySnapshot = query(\n      collection(db, \"users\"),\n      where(\"username\", \"==\", username)\n    );\n    const docs = await getDocs(querySnapshot);\n    return docs.docs.length > 0;\n  } catch (e) {\n    console.log(e);\n    throw \"Somethng went wrong\";\n  }\n}\n\n\n\nasync function updateUser(profile: Profile) {\n  try {\n    const ref = doc(collection(db, \"users\"), profile.userId).withConverter(ProfileConverter);\n\n    await setDoc(ref, profile);\n\n  } catch (e) {\n    console.log(e);\n    throw (e);\n  }\n}\n\n\nasync function createUser(auth: any, username: string, fullname: string, email: string, password: string,): Promise<Profile> {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password)\n\n      .catch((error) => {\n        console.log(error);\n        var error;\n        switch (error.code) {\n          case \"auth/invalid-email\":\n            error = (\"Email or password is invalid\");\n            break;\n          case \"auth/weak-password\":\n            error = (\"Password is week\");\n            break;\n          case \"auth/email-already-in-use\":\n            error = (\"Email already in use\");\n            break;\n\n          default:\n            console.log(error.code);\n            console.log(error.message);\n            error = (\"Some thing went wrong. Please try again later\");\n            break;\n        }\n        throw error;\n      });\n    // authentication\n    // -> emailAddress, password & username (displyname)\n    const profile = new Profile(\n      userCredential.user.uid,\n      fullname,\n      username.toLowerCase(),\n      email,\n      [],\n      [],\n      Date.now()\n    );\n    return profile;\n  } catch (e) {\n    console.log(e);\n    throw (e);\n  }\n}\n\nexport { doesUsernameExist, updateUser, createUser };","import { Routes, useNavigate } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from \"../context/firebase\";\nimport cx from \"classnames\";\nimport * as Route from \"../constants/routes\";\nimport { Link } from \"react-router-dom\";\nimport { doesUsernameExist, createUser,updateUser } from \"../services/firebase\";\nimport { Profile, ProfileConverter } from \"../models/index.model\";\nimport {\n  getAuth,\n  doc,\n  db,\n  addDoc,\n  collection,\n  createUserWithEmailAndPassword,\n  updateProfile,\n  setDoc,\n} from \"../lib/firebase\";\n// import { setDoc } from \"firebase/firestore/lite\";\n\nfunction Signup() {\n  const history = useNavigate();\n  const firebase = useContext(FirebaseContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [fullname, setFullName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const isValid = password === \"\" || email === \"\";\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    try {\n      const usernameExists = await doesUsernameExist(username);\n      if (usernameExists) {\n        setError(\"Username already exists\");\n        return;\n      } else {\n        setError(\"\");\n      }\n\n      const auth = getAuth();\n      const profile = await createUser(auth,username,fullname, email, password);\n      console.log(profile);\n      await updateUser(profile);\n      history(Route.DASHBOARD);\n    } catch (e) {\n      console.log(e);\n      setError(e);\n    }\n  };\n\n  useEffect(() => {\n    document.title = \"Signup - instagram\";\n  }, []);\n\n  return (\n    <div className=\"container mx-auto flex max-w-screen-md h-screen\">\n      <div className=\"flex w-3/5  m-auto \">\n        <img src=\"/images/iphone-with-profile.jpg\" alt=\"iPhone\" />\n      </div>\n\n      <div className=\"flex flex-col w-2/5 place-content-center \">\n        <div className=\"bg-white p-4 border border-gray-primary mb-4 rounded\">\n          <h1 className=\"flex justfy-center place-content-center  w-full\">\n            <img\n              src=\"/images/logo.png\"\n              alt=\"instagram\"\n              className=\"mt-2 w-6/12 mb-4\"\n            />\n          </h1>\n          {error && (\n            <p className=\"text-red-500 mb-4 text-sm  w-full\">{error}</p>\n          )}\n\n          <form onSubmit={handleSignup} method=\"post\">\n            <input\n              aria-label=\"Enter your username\"\n              className=\"text-sm text-gray-base w-full\n             py-5 px-4 h-2 border border-grey-primary rounded mb-2\"\n              type=\"text\"\n              placeholder=\"Enter username\"\n              onChange={(e) => setUserName(e.target.value)}\n              value={username || \"\"}\n            />\n            <input\n              aria-label=\"Enter your full name\"\n              className=\"text-sm text-gray-base w-full\n            py-5 px-4 h-2 border border-grey-primary rounded mb-2\"\n              type=\"text\"\n              placeholder=\"Enter fullname\"\n              onChange={(e) => setFullName(e.target.value)}\n              value={fullname || \"\"}\n            />\n            <input\n              aria-label=\"Enter your email address\"\n              className=\"text-sm text-gray-base w-full\n             py-5 px-4 h-2 border border-grey-primary rounded mb-2\"\n              type=\"email\"\n              placeholder=\"Email address\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email || \"\"}\n            />\n            <input\n              aria-label=\"Enter your email password\"\n              className=\"text-sm text-gray-base w-full\n            py-5 px-4 h-2 border border-grey-primary rounded mb-2\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n            />\n            <button\n              disabled={isValid}\n              type=\"submit\"\n              className={cx(\n                \"bg-blue-500 text-white w-full py-3 rounded font-bold px-4 rounded mb-2\"\n              )}\n            >\n              Sign up\n            </button>\n          </form>\n        </div>\n        <div className=\"flex justfy-center items-center flex-col w-full bg-white p-4 border border-gray-primary rounded\">\n          <p className=\"text-sm\">\n            Have an account?{\" \"}\n            <Link to={Route.LOGIN_ROUTE} className=\"font-bold text-blue-medium\">\n              Sign in\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n\n//text-red-primary\n//text-gray-base\n// border-grey-primary\n// bg-blue-medium\n"],"sourceRoot":""}